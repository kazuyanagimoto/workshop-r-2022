---
execute:
    echo: true
    warning: false
    message: false
    cache: false
format:
  revealjs:
    standalone: false
    embed-resources: false
    width: 1600
    height: 900
    theme: [default, custom.scss]
    slide-number: true
    fig-cap-location: top
    fig-format: svg
    pdf-separate-fragments: false
---

## {background-image="https://source.unsplash.com/5QgIuuBxKwM" visibility="uncounted"}

::: {.title}
An Advanced<br>Introduction to {{< fa brands r-project >}}
:::

::: {.author}
Kazuharu Yanagimoto
:::

::: {.date}
January 13, 2023
:::

```{r}
#| include: false
library(here)
library(arrow)
library(tidyverse)
library(gt)
library(kableExtra)

color_base <- "#1C5253"
color_base_light <- xaringanthemer::lighten_color(color_base, strength = 0.33)
color_text <- "#272822"
color_bg <- "#FFFFFF"
color_accent <- "#EB811B"
color_accent_light <- xaringanthemer::lighten_color(color_accent, strength = 0.33)
grey <- scales::alpha("grey", 0.7)
dark_gray <- "#6d6d6d"
```


# Project Based Workflow {background-color="#1C5253" visibility="uncounted"}

## {}
::: {.question}
Q. Why Don't Your Codes Work on My Computer?

::: {.fragment .fade-in-then-semiout}

A. Conflicts in _Path_ or _Package Version_

:::
::: {.fragment .fade-in}

A. You don't use `here` and `renv` under **R projct**

:::
:::

## R Project

Have you ever click this button?

. . .

![](img/rproject.png){height=500 fig-align="center"}

. . .

<br>

::: {.message}
You should ALWAYS use R Project!
:::

## Why Do We Need to Use R Project?

<br>

:::: {.columns}

::: {.column}

**Path** Manager

![](https://raw.githubusercontent.com/allisonhorst/stats-illustrations/master/rstats-artwork/here.png){height=600 fig-align="center"}
:::

::: {.column}

**Package** Manager

![](https://rstudio.github.io/renv/logo.svg){height=600 fig-align="center"}
:::

::::


## Always Use `here` for Paths

<br>

The function `here::here()` treats the proejct directory as the root directory.

```{r}
here::here()
```

<br>

You should always specify the path by `here::here()`

```{r}
data <- readr::read_csv(
  here::here("data/tiny.csv")
)
```

<br>

It works in Windows, Mac, Linux (of course, in a Docker environment) 

## Remember...

::: {.center-y}

>If the first line of your R script is
>`setwd("C:\Users\jenny\path\that\only\I\have")`
>
>I* will come into your office and SET YOUR COMPUTER ON FIRE 🔥.
>
>--@bryan_zen_2018

:::

## `renv` Is Smarter than Us

<br>

:::: {.columns}

::: {.column width="60%"}

- Init the environment with `renv::init()`. It creates `renv/` and `renv.lock` file
- At some point, you can record your package and its version information with `renv::snapshot()`
- Your collaborater can install the packages just by `renv::restore()`

:::

::: {.column width="40%"}

```{.json filename="renv.lock"}
{
  "R": {
    "Version": "4.2.2",
    "Repositories": [
      {
        "Name": "CRAN",
        "URL": "https://packagemanager.posit.co/cran/latest"
      }
    ]
  },
  "Packages": {
    "DBI": {
      "Package": "DBI",
      "Version": "1.1.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "b2866e62bab9378c3cc9476a1954226b",
      "Requirements": []
    },
    "MASS": {
      "Package": "MASS",
      "Version": "7.3-58.1",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "762e1804143a332333c054759f89a706",
      "Requirements": []
    },
    "Matrix": {
      "Package": "Matrix",
      "Version": "1.5-1",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "539dc0c0c05636812f1080f473d2c177",
      "Requirements": [
        "lattice"
      ]
    },
    "R6": {
      "Package": "R6",
      "Version": "2.5.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "470851b6d5d0ac559e9d01bb352b4021",
      "Requirements": []
    },
    "RColorBrewer": {
      "Package": "RColorBrewer",
      "Version": "1.1-3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "45f0398006e83a5b10b72a90663d8d8c",
      "Requirements": []
    },
    "askpass": {
      "Package": "askpass",
      "Version": "1.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "e8a22846fff485f0be3770c2da758713",
      "Requirements": [
        "sys"
      ]
    },
    "assertthat": {
      "Package": "assertthat",
      "Version": "0.2.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "50c838a310445e954bc13f26f26a6ecf",
      "Requirements": []
    },
    "backports": {
      "Package": "backports",
      "Version": "1.4.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c39fbec8a30d23e721980b8afb31984c",
      "Requirements": []
    },
    "base64enc": {
      "Package": "base64enc",
      "Version": "0.1-3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "543776ae6848fde2f48ff3816d0628bc",
      "Requirements": []
    },
    "bit": {
      "Package": "bit",
      "Version": "4.0.5",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "d242abec29412ce988848d0294b208fd",
      "Requirements": []
    },
    "bit64": {
      "Package": "bit64",
      "Version": "4.0.5",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "9fe98599ca456d6552421db0d6772d8f",
      "Requirements": [
        "bit"
      ]
    },
    "blob": {
      "Package": "blob",
      "Version": "1.2.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "10d231579bc9c06ab1c320618808d4ff",
      "Requirements": [
        "rlang",
        "vctrs"
      ]
    },
    "broom": {
      "Package": "broom",
      "Version": "1.0.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "1773f8d5102f9853ecd18a0d13d460fd",
      "Requirements": [
        "backports",
        "dplyr",
        "ellipsis",
        "generics",
        "glue",
        "purrr",
        "rlang",
        "stringr",
        "tibble",
        "tidyr"
      ]
    },
    "bslib": {
      "Package": "bslib",
      "Version": "0.4.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "a7fbf03946ad741129dc81098722fca1",
      "Requirements": [
        "base64enc",
        "cachem",
        "htmltools",
        "jquerylib",
        "jsonlite",
        "memoise",
        "mime",
        "rlang",
        "sass"
      ]
    },
    "cachem": {
      "Package": "cachem",
      "Version": "1.0.6",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "648c5b3d71e6a37e3043617489a0a0e9",
      "Requirements": [
        "fastmap",
        "rlang"
      ]
    },
    "callr": {
      "Package": "callr",
      "Version": "3.7.3",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "9b2191ede20fa29828139b9900922e51",
      "Requirements": [
        "R6",
        "processx"
      ]
    },
    "cellranger": {
      "Package": "cellranger",
      "Version": "1.1.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "f61dbaec772ccd2e17705c1e872e9e7c",
      "Requirements": [
        "rematch",
        "tibble"
      ]
    },
    "cli": {
      "Package": "cli",
      "Version": "3.5.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "eb9fc121ad9a1075c471107ef185be46",
      "Requirements": []
    },
    "clipr": {
      "Package": "clipr",
      "Version": "0.8.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "3f038e5ac7f41d4ac41ce658c85e3042",
      "Requirements": []
    },
    "colorspace": {
      "Package": "colorspace",
      "Version": "2.0-3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "bb4341986bc8b914f0f0acf2e4a3f2f7",
      "Requirements": []
    },
    "cpp11": {
      "Package": "cpp11",
      "Version": "0.4.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "ed588261931ee3be2c700d22e94a29ab",
      "Requirements": []
    },
    "crayon": {
      "Package": "crayon",
      "Version": "1.5.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "e8a1e41acf02548751f45c718d55aa6a",
      "Requirements": []
    },
    "curl": {
      "Package": "curl",
      "Version": "4.3.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "0eb86baa62f06e8855258fa5a8048667",
      "Requirements": []
    },
    "data.table": {
      "Package": "data.table",
      "Version": "1.14.6",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "aecef50008ea7b57c76f1cb5c127fb02",
      "Requirements": []
    },
    "dbplyr": {
      "Package": "dbplyr",
      "Version": "2.2.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "f6c7eb9617e4d2a86bb7182fff99c805",
      "Requirements": [
        "DBI",
        "R6",
        "assertthat",
        "blob",
        "cli",
        "dplyr",
        "glue",
        "lifecycle",
        "magrittr",
        "pillar",
        "purrr",
        "rlang",
        "tibble",
        "tidyselect",
        "vctrs",
        "withr"
      ]
    },
    "digest": {
      "Package": "digest",
      "Version": "0.6.31",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "8b708f296afd9ae69f450f9640be8990",
      "Requirements": []
    },
    "dplyr": {
      "Package": "dplyr",
      "Version": "1.0.10",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "539412282059f7f0c07295723d23f987",
      "Requirements": [
        "R6",
        "generics",
        "glue",
        "lifecycle",
        "magrittr",
        "pillar",
        "rlang",
        "tibble",
        "tidyselect",
        "vctrs"
      ]
    },
    "dtplyr": {
      "Package": "dtplyr",
      "Version": "1.2.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c5f8828a0b459a703db190b001ad4818",
      "Requirements": [
        "crayon",
        "data.table",
        "dplyr",
        "ellipsis",
        "glue",
        "lifecycle",
        "rlang",
        "tibble",
        "tidyselect",
        "vctrs"
      ]
    },
    "ellipsis": {
      "Package": "ellipsis",
      "Version": "0.3.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "bb0eec2fe32e88d9e2836c2f73ea2077",
      "Requirements": [
        "rlang"
      ]
    },
    "evaluate": {
      "Package": "evaluate",
      "Version": "0.19",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "5aac3cd0a3ccb1a738941796b28c26fe",
      "Requirements": []
    },
    "fansi": {
      "Package": "fansi",
      "Version": "1.0.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "83a8afdbe71839506baa9f90eebad7ec",
      "Requirements": []
    },
    "farver": {
      "Package": "farver",
      "Version": "2.1.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "8106d78941f34855c440ddb946b8f7a5",
      "Requirements": []
    },
    "fastmap": {
      "Package": "fastmap",
      "Version": "1.1.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "77bd60a6157420d4ffa93b27cf6a58b8",
      "Requirements": []
    },
    "forcats": {
      "Package": "forcats",
      "Version": "0.5.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "9d95bc88206321cd1bc98480ecfd74bb",
      "Requirements": [
        "cli",
        "ellipsis",
        "glue",
        "lifecycle",
        "magrittr",
        "rlang",
        "tibble",
        "withr"
      ]
    },
    "fs": {
      "Package": "fs",
      "Version": "1.5.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "7c89603d81793f0d5486d91ab1fc6f1d",
      "Requirements": []
    },
    "gargle": {
      "Package": "gargle",
      "Version": "1.2.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "cca71329ad88e21267f09255d3f008c2",
      "Requirements": [
        "cli",
        "fs",
        "glue",
        "httr",
        "jsonlite",
        "rappdirs",
        "rlang",
        "rstudioapi",
        "withr"
      ]
    },
    "generics": {
      "Package": "generics",
      "Version": "0.1.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "15e9634c0fcd294799e9b2e929ed1b86",
      "Requirements": []
    },
    "ggplot2": {
      "Package": "ggplot2",
      "Version": "3.4.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "fd2aab12f54400c6bca43687231e246b",
      "Requirements": [
        "MASS",
        "cli",
        "glue",
        "gtable",
        "isoband",
        "lifecycle",
        "mgcv",
        "rlang",
        "scales",
        "tibble",
        "vctrs",
        "withr"
      ]
    },
    "glue": {
      "Package": "glue",
      "Version": "1.6.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "4f2596dfb05dac67b9dc558e5c6fba2e",
      "Requirements": []
    },
    "googledrive": {
      "Package": "googledrive",
      "Version": "2.0.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c3a25adbbfbb03f12e6f88c5fb1f3024",
      "Requirements": [
        "cli",
        "gargle",
        "glue",
        "httr",
        "jsonlite",
        "lifecycle",
        "magrittr",
        "pillar",
        "purrr",
        "rlang",
        "tibble",
        "uuid",
        "vctrs",
        "withr"
      ]
    },
    "googlesheets4": {
      "Package": "googlesheets4",
      "Version": "1.0.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "3b449d5292327880fc6cb61d0b2e9063",
      "Requirements": [
        "cellranger",
        "cli",
        "curl",
        "gargle",
        "glue",
        "googledrive",
        "httr",
        "ids",
        "magrittr",
        "purrr",
        "rematch2",
        "rlang",
        "tibble",
        "vctrs"
      ]
    },
    "gtable": {
      "Package": "gtable",
      "Version": "0.3.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "36b4265fb818f6a342bed217549cd896",
      "Requirements": []
    },
    "haven": {
      "Package": "haven",
      "Version": "2.5.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "5b45a553fca2217a07b6f9c843304c44",
      "Requirements": [
        "cli",
        "cpp11",
        "forcats",
        "hms",
        "lifecycle",
        "readr",
        "rlang",
        "tibble",
        "tidyselect",
        "vctrs"
      ]
    },
    "here": {
      "Package": "here",
      "Version": "1.0.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "24b224366f9c2e7534d2344d10d59211",
      "Requirements": [
        "rprojroot"
      ]
    },
    "highr": {
      "Package": "highr",
      "Version": "0.10",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "06230136b2d2b9ba5805e1963fa6e890",
      "Requirements": [
        "xfun"
      ]
    },
    "hms": {
      "Package": "hms",
      "Version": "1.1.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "41100392191e1244b887878b533eea91",
      "Requirements": [
        "ellipsis",
        "lifecycle",
        "pkgconfig",
        "rlang",
        "vctrs"
      ]
    },
    "htmltools": {
      "Package": "htmltools",
      "Version": "0.5.4",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "9d27e99cc90bd701c0a7a63e5923f9b7",
      "Requirements": [
        "base64enc",
        "digest",
        "ellipsis",
        "fastmap",
        "rlang"
      ]
    },
    "httr": {
      "Package": "httr",
      "Version": "1.4.4",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "57557fac46471f0dbbf44705cc6a5c8c",
      "Requirements": [
        "R6",
        "curl",
        "jsonlite",
        "mime",
        "openssl"
      ]
    },
    "ids": {
      "Package": "ids",
      "Version": "1.0.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "99df65cfef20e525ed38c3d2577f7190",
      "Requirements": [
        "openssl",
        "uuid"
      ]
    },
    "isoband": {
      "Package": "isoband",
      "Version": "0.2.7",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "0080607b4a1a7b28979aecef976d8bc2",
      "Requirements": []
    },
    "janitor": {
      "Package": "janitor",
      "Version": "2.1.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "6de84a8c67fb247e721166049c84695f",
      "Requirements": [
        "dplyr",
        "lifecycle",
        "lubridate",
        "magrittr",
        "purrr",
        "rlang",
        "snakecase",
        "stringi",
        "stringr",
        "tidyr",
        "tidyselect"
      ]
    },
    "jquerylib": {
      "Package": "jquerylib",
      "Version": "0.1.4",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "5aab57a3bd297eee1c1d862735972182",
      "Requirements": [
        "htmltools"
      ]
    },
    "jsonlite": {
      "Package": "jsonlite",
      "Version": "1.8.4",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "a4269a09a9b865579b2635c77e572374",
      "Requirements": []
    },
    "knitr": {
      "Package": "knitr",
      "Version": "1.41",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "6d4971f3610e75220534a1befe81bc92",
      "Requirements": [
        "evaluate",
        "highr",
        "stringr",
        "xfun",
        "yaml"
      ]
    },
    "labeling": {
      "Package": "labeling",
      "Version": "0.4.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "3d5108641f47470611a32d0bdf357a72",
      "Requirements": []
    },
    "lattice": {
      "Package": "lattice",
      "Version": "0.20-45",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "b64cdbb2b340437c4ee047a1f4c4377b",
      "Requirements": []
    },
    "lifecycle": {
      "Package": "lifecycle",
      "Version": "1.0.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "001cecbeac1cff9301bdc3775ee46a86",
      "Requirements": [
        "cli",
        "glue",
        "rlang"
      ]
    },
    "lubridate": {
      "Package": "lubridate",
      "Version": "1.9.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "2af4550c2f0f7fbe7cbbf3dbf4ea3902",
      "Requirements": [
        "generics",
        "timechange"
      ]
    },
    "magrittr": {
      "Package": "magrittr",
      "Version": "2.0.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "7ce2733a9826b3aeb1775d56fd305472",
      "Requirements": []
    },
    "memoise": {
      "Package": "memoise",
      "Version": "2.0.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "e2817ccf4a065c5d9d7f2cfbe7c1d78c",
      "Requirements": [
        "cachem",
        "rlang"
      ]
    },
    "mgcv": {
      "Package": "mgcv",
      "Version": "1.8-41",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "6b3904f13346742caa3e82dd0303d4ad",
      "Requirements": [
        "Matrix",
        "nlme"
      ]
    },
    "mime": {
      "Package": "mime",
      "Version": "0.12",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "18e9c28c1d3ca1560ce30658b22ce104",
      "Requirements": []
    },
    "modelr": {
      "Package": "modelr",
      "Version": "0.1.10",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "bc23cda9c6a8f91dc1c10e1994494711",
      "Requirements": [
        "broom",
        "magrittr",
        "purrr",
        "rlang",
        "tibble",
        "tidyr",
        "tidyselect",
        "vctrs"
      ]
    },
    "munsell": {
      "Package": "munsell",
      "Version": "0.5.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "6dfe8bf774944bd5595785e3229d8771",
      "Requirements": [
        "colorspace"
      ]
    },
    "nlme": {
      "Package": "nlme",
      "Version": "3.1-160",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "02e3c6e7df163aafa8477225e6827bc5",
      "Requirements": [
        "lattice"
      ]
    },
    "openssl": {
      "Package": "openssl",
      "Version": "2.0.5",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "b04c27110bf367b4daa93f34f3d58e75",
      "Requirements": [
        "askpass"
      ]
    },
    "pillar": {
      "Package": "pillar",
      "Version": "1.8.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "f2316df30902c81729ae9de95ad5a608",
      "Requirements": [
        "cli",
        "fansi",
        "glue",
        "lifecycle",
        "rlang",
        "utf8",
        "vctrs"
      ]
    },
    "pkgconfig": {
      "Package": "pkgconfig",
      "Version": "2.0.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "01f28d4278f15c76cddbea05899c5d6f",
      "Requirements": []
    },
    "prettyunits": {
      "Package": "prettyunits",
      "Version": "1.1.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "95ef9167b75dde9d2ccc3c7528393e7e",
      "Requirements": []
    },
    "processx": {
      "Package": "processx",
      "Version": "3.8.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "a33ee2d9bf07564efb888ad98410da84",
      "Requirements": [
        "R6",
        "ps"
      ]
    },
    "progress": {
      "Package": "progress",
      "Version": "1.2.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "14dc9f7a3c91ebb14ec5bb9208a07061",
      "Requirements": [
        "R6",
        "crayon",
        "hms",
        "prettyunits"
      ]
    },
    "ps": {
      "Package": "ps",
      "Version": "1.7.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "68dd03d98a5efd1eb3012436de45ba83",
      "Requirements": []
    },
    "purrr": {
      "Package": "purrr",
      "Version": "1.0.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "1ad491d27989ec6c26a2918ad6df116b",
      "Requirements": [
        "cli",
        "lifecycle",
        "magrittr",
        "rlang",
        "vctrs"
      ]
    },
    "rappdirs": {
      "Package": "rappdirs",
      "Version": "0.3.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "5e3c5dc0b071b21fa128676560dbe94d",
      "Requirements": []
    },
    "readr": {
      "Package": "readr",
      "Version": "2.1.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "2dfbfc673ccb3de3d8836b4b3bd23d14",
      "Requirements": [
        "R6",
        "cli",
        "clipr",
        "cpp11",
        "crayon",
        "hms",
        "lifecycle",
        "rlang",
        "tibble",
        "tzdb",
        "vroom"
      ]
    },
    "readxl": {
      "Package": "readxl",
      "Version": "1.4.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "5c1fbc365ac0a3fe7728ac79108b8e64",
      "Requirements": [
        "cellranger",
        "cpp11",
        "progress",
        "tibble"
      ]
    },
    "rematch": {
      "Package": "rematch",
      "Version": "1.0.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c66b930d20bb6d858cd18e1cebcfae5c",
      "Requirements": []
    },
    "rematch2": {
      "Package": "rematch2",
      "Version": "2.1.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "76c9e04c712a05848ae7a23d2f170a40",
      "Requirements": [
        "tibble"
      ]
    },
    "renv": {
      "Package": "renv",
      "Version": "0.16.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c9e8442ab69bc21c9697ecf856c1e6c7",
      "Requirements": []
    },
    "reprex": {
      "Package": "reprex",
      "Version": "2.0.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "d66fe009d4c20b7ab1927eb405db9ee2",
      "Requirements": [
        "callr",
        "cli",
        "clipr",
        "fs",
        "glue",
        "knitr",
        "lifecycle",
        "rlang",
        "rmarkdown",
        "rstudioapi",
        "withr"
      ]
    },
    "rlang": {
      "Package": "rlang",
      "Version": "1.0.6",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "4ed1f8336c8d52c3e750adcdc57228a7",
      "Requirements": []
    },
    "rmarkdown": {
      "Package": "rmarkdown",
      "Version": "2.19",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "4e29299e1f4c7eabb0b8365b338adf3c",
      "Requirements": [
        "bslib",
        "evaluate",
        "htmltools",
        "jquerylib",
        "jsonlite",
        "knitr",
        "stringr",
        "tinytex",
        "xfun",
        "yaml"
      ]
    },
    "rprojroot": {
      "Package": "rprojroot",
      "Version": "2.0.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "1de7ab598047a87bba48434ba35d497d",
      "Requirements": []
    },
    "rstudioapi": {
      "Package": "rstudioapi",
      "Version": "0.14",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "690bd2acc42a9166ce34845884459320",
      "Requirements": []
    },
    "rvest": {
      "Package": "rvest",
      "Version": "1.0.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "a4a5ac819a467808c60e36e92ddf195e",
      "Requirements": [
        "cli",
        "glue",
        "httr",
        "lifecycle",
        "magrittr",
        "rlang",
        "selectr",
        "tibble",
        "withr",
        "xml2"
      ]
    },
    "sass": {
      "Package": "sass",
      "Version": "0.4.4",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c76cbac7ca04ce82d8c38e29729987a3",
      "Requirements": [
        "R6",
        "fs",
        "htmltools",
        "rappdirs",
        "rlang"
      ]
    },
    "scales": {
      "Package": "scales",
      "Version": "1.2.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "906cb23d2f1c5680b8ce439b44c6fa63",
      "Requirements": [
        "R6",
        "RColorBrewer",
        "farver",
        "labeling",
        "lifecycle",
        "munsell",
        "rlang",
        "viridisLite"
      ]
    },
    "selectr": {
      "Package": "selectr",
      "Version": "0.4-2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "3838071b66e0c566d55cc26bd6e27bf4",
      "Requirements": [
        "R6",
        "stringr"
      ]
    },
    "snakecase": {
      "Package": "snakecase",
      "Version": "0.11.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "4079070fc210c7901c0832a3aeab894f",
      "Requirements": [
        "stringi",
        "stringr"
      ]
    },
    "stringi": {
      "Package": "stringi",
      "Version": "1.7.8",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "a68b980681bcbc84c7a67003fa796bfb",
      "Requirements": []
    },
    "stringr": {
      "Package": "stringr",
      "Version": "1.5.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "671a4d384ae9d32fc47a14e98bfa3dc8",
      "Requirements": [
        "cli",
        "glue",
        "lifecycle",
        "magrittr",
        "rlang",
        "stringi",
        "vctrs"
      ]
    },
    "sys": {
      "Package": "sys",
      "Version": "3.4.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "34c16f1ef796057bfa06d3f4ff818a5d",
      "Requirements": []
    },
    "tibble": {
      "Package": "tibble",
      "Version": "3.1.8",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "56b6934ef0f8c68225949a8672fe1a8f",
      "Requirements": [
        "fansi",
        "lifecycle",
        "magrittr",
        "pillar",
        "pkgconfig",
        "rlang",
        "vctrs"
      ]
    },
    "tidyr": {
      "Package": "tidyr",
      "Version": "1.2.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "cdb403db0de33ccd1b6f53b83736efa8",
      "Requirements": [
        "cpp11",
        "dplyr",
        "ellipsis",
        "glue",
        "lifecycle",
        "magrittr",
        "purrr",
        "rlang",
        "tibble",
        "tidyselect",
        "vctrs"
      ]
    },
    "tidyselect": {
      "Package": "tidyselect",
      "Version": "1.2.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "79540e5fcd9e0435af547d885f184fd5",
      "Requirements": [
        "cli",
        "glue",
        "lifecycle",
        "rlang",
        "vctrs",
        "withr"
      ]
    },
    "tidyverse": {
      "Package": "tidyverse",
      "Version": "1.3.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "972389aea7fa1a34739054a810d0c6f6",
      "Requirements": [
        "broom",
        "cli",
        "crayon",
        "dbplyr",
        "dplyr",
        "dtplyr",
        "forcats",
        "ggplot2",
        "googledrive",
        "googlesheets4",
        "haven",
        "hms",
        "httr",
        "jsonlite",
        "lubridate",
        "magrittr",
        "modelr",
        "pillar",
        "purrr",
        "readr",
        "readxl",
        "reprex",
        "rlang",
        "rstudioapi",
        "rvest",
        "stringr",
        "tibble",
        "tidyr",
        "xml2"
      ]
    },
    "timechange": {
      "Package": "timechange",
      "Version": "0.1.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "4657195cc632097bb8d140d626b519fb",
      "Requirements": [
        "cpp11"
      ]
    },
    "tinytex": {
      "Package": "tinytex",
      "Version": "0.43",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "facc02f3d63ed7dd765513c004c394ce",
      "Requirements": [
        "xfun"
      ]
    },
    "tzdb": {
      "Package": "tzdb",
      "Version": "0.3.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "b2e1cbce7c903eaf23ec05c58e59fb5e",
      "Requirements": [
        "cpp11"
      ]
    },
    "utf8": {
      "Package": "utf8",
      "Version": "1.2.2",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c9c462b759a5cc844ae25b5942654d13",
      "Requirements": []
    },
    "uuid": {
      "Package": "uuid",
      "Version": "1.1-0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "f1cb46c157d080b729159d407be83496",
      "Requirements": []
    },
    "vctrs": {
      "Package": "vctrs",
      "Version": "0.5.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "970324f6572b4fd81db507b5d4062cb0",
      "Requirements": [
        "cli",
        "glue",
        "lifecycle",
        "rlang"
      ]
    },
    "viridisLite": {
      "Package": "viridisLite",
      "Version": "0.4.1",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "62f4b5da3e08d8e5bcba6cac15603f70",
      "Requirements": []
    },
    "vroom": {
      "Package": "vroom",
      "Version": "1.6.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "64f81fdead6e0d250fb041e175d123ab",
      "Requirements": [
        "bit64",
        "cli",
        "cpp11",
        "crayon",
        "glue",
        "hms",
        "lifecycle",
        "progress",
        "rlang",
        "tibble",
        "tidyselect",
        "tzdb",
        "vctrs",
        "withr"
      ]
    },
    "withr": {
      "Package": "withr",
      "Version": "2.5.0",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "c0e49a9760983e81e55cdd9be92e7182",
      "Requirements": []
    },
    "xfun": {
      "Package": "xfun",
      "Version": "0.36",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "f5baec54606751aa53ac9c0e05848ed6",
      "Requirements": []
    },
    "xml2": {
      "Package": "xml2",
      "Version": "1.3.3",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "40682ed6a969ea5abfd351eb67833adc",
      "Requirements": []
    },
    "yaml": {
      "Package": "yaml",
      "Version": "2.3.6",
      "Source": "Repository",
      "Repository": "RSPM",
      "Hash": "9b570515751dcbae610f29885e025b41",
      "Requirements": []
    }
  }
}


```

:::

::::

. . .

But Dropbox might ruin...

## (Advanced) `renv` with Cloud Storage

## (Advanced) Docker

<br>

Problems `renv` can solve are only packages. They may come from differences in

- **R versions** ⇒ Always use the latest version of R 
- **Non-R dependencies** (e.g., geospatial packages) ⇒ Docker can solve
- **OS** (only Windows binary produces bugs...) ⇒ Docker can solve

<br>

. . .

#### Docker

- A virtual machine. Write a blueprint (Dockerfile) including information of OS (Linux), Application (R and others), and Packages
- If you work on Docker, others can _perfectly_ replicate your environment


## Handson 1

<br>

1. Clone (or download) the [course repositiory](https://github.com/nicetak/workshop-r-2022)
1. Open the course project (`workshop-r-2022.Rproj`)
1. Run `renv::restore()` in R console
1. Confirm you can render sample notebooks without any problem

<br>

::: {.callout-warning}
Please make sure if you are using the latest `r version$version.string`.
:::

# Cleaning Strategy {background-color="#1C5253" visibility="uncounted"}


## Fundamental Theorem of Readability

<br>

::: {.callout-note}

## Fundamental Theorem of Readability (@boswell_art_2011)

Code should be written to minimize the time it would take for someone else to understand it.

:::

<br>

. . .


$$
\text{Code} := \arg\min_{c \in \mathcal{C}}\mathbb{E}_i[R_{i}(c)]
$$

where

- $\mathcal{C}$: Set of codes that work
- $i$: A potential reader including yourself at a different time point
- $R_{i}(c)$: Time taken by person $i$ to understand code $c$

## Naming

<br>

For readability, you need to name variables **informatively** and **non-misleadingly**

```{r}
#| echo: false

gtb <- tibble(
  var = c("Bool", "Category", "Bins"),
  good = c("is_female, has_kids", "industry8, emp3", "age_bin5, wage_bin10"),
  bad= c("female, no_kids", "industry, emp_status", "age, wage")) |>
  gt(rowname_col = "var") |>
  cols_label(good = "🙆 Good", bad = "🙅 Bad")

gtb
```


## Naming

<br>

For readability, you need to name variables **informatively** and **non-misleadingly**

```{r}
#| echo: false

gtb |>
  tab_style(
    style = list(
      cell_fill(color = color_base_light),
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = "good",
      rows = "Bool"
    )
  )
```

<br>

**Boolean**

- `is_*`, `has_*`, `should_*` indicates the type boolean.
- Starting with `not_*`/`no_*` increases a step of recognition

## Naming

<br>

For readability, you need to name variables **informatively** and **non-misleadingly**

```{r}
#| echo: false

gtb |>
  tab_style(
    style = list(
      cell_fill(color = color_base_light),
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = "good",
      rows = "Category"
    )
  )
```

<br>

**Categorical**

- Attached number indicates if it is _categorical_ and its _number_

## Naming

<br>

For readability, you need to name variables **informatively** and **non-misleadingly**

```{r}
#| echo: false

gtb |>
  tab_style(
    style = list(
      cell_fill(color = color_base_light),
      cell_text(weight = "bold")
      ),
    locations = cells_body(
      columns = "good",
      rows = "Bins"
    )
  )
```

<br>

**Bins** of continuous variables

- Need to avoid the confusion with its continuous variable
- Attached number shows the width of the bin


## Rename at Once

:::: {.columns}

::: {.column width="70%"}

```{r}
raw <- read_delim(here("data/raw/accident_bike/txt/year=2022/file.txt"),
        delim = ";", show_col_types = FALSE)
```

```{r}
#| echo: false
raw |>
  select(1:5) |>
  glimpse()
```


<br>

```{r}
code <- read_csv(here("data/translate/accident_bike.csv"),
                     show_col_types = FALSE)
renamed <- raw |>
  rename_at(vars(code$spanish), ~code$english)
```

```{r}
#| echo: false
renamed |>
  select(1:5) |>
  glimpse()
```


:::

::: {.column width="30%"}

```{r}
#| echo: false
code |>
  kbl() |>
  kable_styling(font_size = 20)
```

:::

::::

## Type: Date & Time

<br>

`lubridate` provides strong date-parsering functions.


<br>

```{r}
lubridate::ymd("2021/08/31")
lubridate::mdy("Sep. 10, 19")
lubridate::dmy_hm("02/04/1999 16:00", tz="America/New_York")
```


## {}

```{r}
renamed |> select(date, hms) |> head()
```

<br>

```{r}
renamed |>
  mutate(time = lubridate::dmy_hms(str_c(date, hms), tz = "Europe/Madrid")) |>
  select(date, hms, time) |>
  head()
```


## Type: Categorical Variables

<br>

:::: {.columns}

::: {.column width="50%"}
```{r}
renamed |>
  mutate(
    type_person = recode_factor(type_person,
        "Conductor" = "Driver",
        "Pasajero" = "Passenger",
        "Peatón" = "Pedestrian",
        "NULL"= NULL)) |>
  janitor::tabyl(type_person)
```
:::

::: {.column width="50%"}

::: {.fragment}

`recode_factor()` finishes:

1. Define as _factor_ variables
1. Order _factor_ variable
1. Rename & Translate (labels in plots & tables)
1. Handle `NA` values (next slide)

:::

:::

::::

## Handle `NA` Values

Some datasets include NA values as string format

```{r}
unique(renamed$weather) # "Se desconoce" is also essentially NA
```

<br>

. . .

#### Solution 1: Define NA values when you load

```{r}
sol1 <- read_delim(here("data/raw/accident_bike/txt/year=2019/file.txt"),
                 delim = ";", show_col_types = FALSE,
                 na = c("", "NA", "NULL", "Se desconoce", "Desconocido")) |>
        rename(weather = "estado_meteorológico")

unique(sol1$weather)
```

<br>

. . .

Cannot use when specific numbers as NA values (9, 99,...)

## {}
#### Solution2: `na_if()`

```{r}
renamed |>
  mutate(
    weather_old = weather,# Presentation Purpose
    weather = na_if(weather, "Se desconoce"),
    weather = na_if(weather, "NULL"),
    ) |>
  select(weather_old, weather) |>
  head()
```

<br>

Works for any case. But need to write for each `NA` value.

## {}

#### Soltion 3: Recode as `NULL`

```{r}
renamed |>
  mutate(
    weather_spanish = weather,# Presentation Purpose
    weather = recode_factor(weather,
        "Despejado" = "sunny",
        "Nublado" = "cloud",
        "Lluvia débil" = "soft rain",
        "Lluvia intensa" = "hard rain",
        "LLuvia intensa" = "hard rain",
        "Nevando" = "snow",
        "Granizando" = "hail",
        "Se desconoce" = NULL,
        "NULL" = NULL)) |>
  select(weather_spanish, weather) |>
  head()
```

<br>

. . .

Only works for categorical variables. But practically useful.

## Parquet Format

<br>

```{r}
#| echo: false

gtb <- tribble(
  ~name,      ~speed, ~size, ~keep_type, ~multi,
  "csv, tsv",    "❌", "❌",      "❌",     "All",
  "rds, RData", "❌", "✔️",      "✔️",     "❌",
  "parquet",     "✔️", "✔️",       "✔️",     "Python, Julia, MATLAB, Stata,...") |>
  gt(rowname_col = "name") |>
  cols_label(speed = "Speed", size = "Size", keep_type = "Keep Type", multi = "Multi-Language") |>
  cols_align("center")

gtb
```

<br>

You can find a benchmark in @kastrun_comparing_2022

## `arrow::read_parquet()`

<br>

You can load parquet data as **column-information only**

<br>

:::: {.columns}

::: {.column width="50%"}
```{r}
#| code-line-numbers: "3"
df <- arrow::read_parquet(
  here("data/cleaned/accident_bike.parquet"),
  as_data_frame = TRUE)

df
```
:::

::: {.column width="50%"}
```{r}
#| code-line-numbers: "3"
info <- arrow::read_parquet(
  here("data/cleaned/accident_bike.parquet"),
  as_data_frame = FALSE)

info
```
:::

::::

## Release Parquet on Memory

:::: {.columns}

::: {.column width="50%"}
```{r}
#| code-line-numbers: "2"

info |>
  collect()
```

:::

::: {.column width="50%"}
```{r}
info |>
  filter(is_hospitalized) |>
  select(time, gender, age_c, positive_alcohol) |>
  collect()
```
:::

::::

- `dplyr::collect()` releases the loaded parquet data on memory
- You can load them after `select()` or `filter()`
- Also, `group_by()` and `summarize()` are available
- Quite useful for **large datasets**


## Parquet with Partitioned Dataset

<br>

:::: {.columns}

::: {.column width="50%"}

```{.shell}
data/raw/accident_bike/parquet/
├── year=2019
│   └── part-0.parquet
├── year=2020
│   └── part-0.parquet
├── year=2021
│   └── part-0.parquet
└── year=2022
    └── part-0.parquet
```

:::

::: {.column width="50%"}
```{r}
info <- open_dataset(
          here("data/raw/accident_bike/parquet"))
info
```
:::

::::

- Given this structure, `arrow::open_dataset()` loads them as one parquet file
- A Partitioning variable (`year`) becomes a new variable
- For more instructions, you can refer to @mock_outrageously_2022 


## Cleaning Workflow

#### 1. Naming

- Put **informative** and **non-misleading** names
- If necessary, translate the variable names
- You can use a correspondence table and rename variables at once


#### 2. Determine Types

- _Date_: `lubridate` parsing functions
- _Categorical_: `recode_factor()`
- _NA-values_: `na_if()` and `recode_factor()`

#### 3. Export

- Parquet format is better than any other data format
- Parquet makes it easy to handle large datasets



# Tips in Plots {background-color="#1C5253" visibility="uncounted"}

## Data-ink Ratio

<br>

::: {.callout-note}

## Data-ink Ratio Principle [@tufte_visual_2001]

Maximize the data-ink ratio in a plot:

$$
\text{Data-ink ratio} := \frac{\text{Data-ink}}{\text{Total ink used to print in the graphic}}
$$

:::

. . .

<br>

::: {.callout-tip}
## Collolary

Omit all the proportions of a graphic that can be erased without losing information

:::

## Maximize Data-ink Ratio {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="50%"}

```{.r}
accident_bike |>
  ggplot(aes(x = type_person, fill = gender)) +
  geom_bar(position = "dodge")
```
:::

::: {.column width="50%"}

```{r}
#| echo: false

accident_bike <- arrow::read_parquet(here("data/cleaned/accident_bike.parquet")) |>
  filter(!is.na(type_person), !is.na(gender), is_hospitalized)

p <- accident_bike |>
  ggplot(aes(x = type_person, fill = gender)) +
  geom_bar(position = "dodge")

p
```

:::

::::


## Maximize Data-ink Ratio {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="50%"}

```{.r code-line-numbers="4-7"}
accident_bike |>
  ggplot(aes(x = type_person, fill = gender)) +
  geom_bar(position = "dodge") +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank())
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-cap: Number of Persons Hospitalized

p +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank())
```

:::

::::

- Omit axis label. The title of the plot can tell them
- Omit legend label. The label "gender" does not add any information
- Omit background grids

## More Readability: Order Bar Plot {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="50%"}

```{.r code-line-numbers="2,3,5,10,12"}
accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1)) +
  guides(fill = guide_legend(reverse = TRUE))
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-cap: Number of Persons Hospitalized

accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1)) +
  guides(fill = guide_legend(reverse = TRUE))
```

:::

::::

- Coord flipped. Reorder the factor variables
- Put legends inside the plot to make the plot bigger

## More Readability: Increase Font Size {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="50%"}

```{.r code-line-numbers="11-13"}
accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))
```
:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-cap: Number of Persons Hospitalized

accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))
```

:::

::::

## R Color Brewer’s Palettes

![](https://r-graph-gallery.com/38-rcolorbrewers-palettes_files/figure-html/thecode-1.png){height=700 fig-align="center"}

## R Color Brewer’s Palettes

<br>

```{r}
#| fig-cap: Number of Persons Hospitalized
#| output-location: column
#| code-line-numbers: "7"

accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  scale_fill_brewer(palette = "Accent") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))
```

## Color-Safe Pallette: Okabe-Ito Palette

<br>

```{r}
#| fig-cap: Number of Persons Hospitalized
#| output-location: column
#| code-line-numbers: "7"

accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  see::scale_fill_okabeito() +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))
```

## Custom Palette

<br>

```{r}
#| fig-cap: Number of Persons Hospitalized
#| output-location: column
#| code-line-numbers: "7"

accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  scale_fill_manual(values = c("#E7B800", "#00AFBB")) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))
```

## Fonts

:::: {.columns}

::: {.column width="60%"}
#### [Goolge Fonts](https://fonts.google.com/)

- You can download well-designed free fonts
- My recommendation: **Condensed** fonts

::: {.small}
  Roboto Condensed, Fira Sans Condensed, IBM Plex Sans Condensed,...

:::

<br>

::: {.fragment}

#### [showtext](https://cran.rstudio.com/web/packages/showtext/vignettes/introduction.html)

- Your collaborators need to download the fonts
- `font_add_google()` and `showtext_auto()` automatically solve the problem

:::

:::

::: {.column width="40%"}
<br>

![](img/google_fonts.png)
:::

::::

## Roboto Condensed

<br>

```{r}
#| fig-cap: Number of Persons Hospitalized
#| output-location: column
#| code-line-numbers: "1-5,17-19"

library(showtext)
font_base  <- "Roboto Condensed"
font_light <- "Roboto Condensed Light 300"
font_add_google(font_base, font_light)
showtext_auto()

accident_bike |>
  ggplot(aes(x = fct_rev(type_person), fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  see::scale_fill_okabeito() +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20, family = font_light),
        axis.text.y = element_text(size = 25, family = font_base),
        legend.text = element_text(size = 20, family = font_light)) +
  guides(fill = guide_legend(reverse = TRUE))
```


## Global Options

<br>

Don't worry. You can set the default theme before plotting.
(e.g. @scherer_ggplot_2021)

<br>

```{.r}
theme_set(theme_minimal(base_size = 12, base_family = "Roboto Condensed"))
theme_update(
  axis.ticks = element_line(color = "grey92"),
  axis.ticks.length = unit(.5, "lines"),
  panel.grid.minor = element_blank(),
  legend.title = element_text(size = 12),
  legend.text = element_text(color = "grey30"),
  plot.title = element_text(size = 18, face = "bold"),
  plot.subtitle = element_text(size = 12, color = "grey30"),
  plot.caption = element_text(size = 9, margin = margin(t = 15))
)
```

<br>

Alternatively, create a custom theme and color palette (e.g. @heiss_who_2021)

## Third-party Themes: `hrbrthemes`

<br>

```{r}
#| fig-cap: Number of Persons Hospitalized
#| output-location: column
#| code-line-numbers: "7,8"

accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  hrbrthemes::scale_fill_ipsum() +
  hrbrthemes::theme_ipsum_rc() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))
```

## Third-party Themes:: `ggpubr` & ggsci Plaette

<br>

```{r}
#| fig-cap: Number of Persons Hospitalized
#| output-location: column
#| code-line-numbers: "7,16"

p <- accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL) +
  ggpubr::theme_pubr() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.1),
        axis.text.x = element_text(size = 20),
        axis.text.y = element_text(size = 25),
        legend.text = element_text(size = 20)) +
  guides(fill = guide_legend(reverse = TRUE))

ggpubr::set_palette(p, "jco") # choose one of ggsci palette
```


## Patchwork

```{r}
#| echo: false
p_default <- accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL, title = "Default") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.2),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 10),
        plot.title.position = "plot") +
  guides(fill = guide_legend(reverse = TRUE))

p_custom <- accident_bike |>
  ggplot(aes(x = fct_rev(type_person), fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL, title = "Custom Theme") +
  see::scale_fill_okabeito() +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.2),
        plot.title = element_text(size = 15, family = font_base, face = "bold"),
        axis.text.x = element_text(size = 10, family = font_light),
        axis.text.y = element_text(size = 12, family = font_base),
        legend.text = element_text(size = 10, family = font_light),
        plot.title.position = "plot") +
  guides(fill = guide_legend(reverse = TRUE))

p_hrbrthemes <- accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL, title = "hrbrthemes") +
  hrbrthemes::scale_fill_ipsum() +
  hrbrthemes::theme_ipsum_rc() +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.2),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 10),
        plot.title.position = "plot") +
  guides(fill = guide_legend(reverse = TRUE))

p_ggpubr <- accident_bike |>
  ggplot(aes(x = fct_rev(type_person),
         fill = fct_rev(gender))) +
  geom_bar(position = "dodge") +
  coord_flip() +
  labs(x = NULL, y = NULL, fill = NULL, title = "ggpubr & ggsci") +
  ggpubr::theme_pubr() +
  scale_fill_manual(values = ggpubr::get_palette("jco", 2)) +
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.y = element_blank(),
        legend.position = c(0.9, 0.3),
        axis.text.x = element_text(size = 10),
        axis.text.y = element_text(size = 12),
        legend.text = element_text(size = 10),
        plot.title.position = "plot") +
  guides(fill = guide_legend(reverse = TRUE))
```

```{r}
#| fig-align: center
library(patchwork)

(p_default + p_custom) / (p_hrbrthemes + p_ggpubr)
```

## Takeaway

#### Maximize Data-ink Ratio

- Omit all the unnecessary elements in a plot

#### Colors & Fonts

- **Color Palette**: `RColorBrewer`, Okabe-Ito, `ggsci`
- **Fonts**: Google Fonts. Especially, _condensed_ fonts.
- **Ready-made Themes**: `hrbrthemes`, `ggpubr`

#### Further Readings (Online Books)

- "Data Visualization: A Practical Introduction" **@healy_data_2018**
- "Fundamentals of Data Visualization" **@wilke_fundamentals_2019**


# Automated Table Creation {background-color="#1C5253" visibility="uncounted"}

## `kableExtra`: Example

:::: {.columns}

::: {.column width="60%"}
```{r}
#| echo: false
data <- arrow::read_parquet(here("data/cleaned/accident_bike.parquet"))

tab <- data |>
  filter(!is.na(weather), !is.na(gender)) |>
  group_by(year, gender, weather) |>
  count() |>
  pivot_wider(names_from = gender, values_from = n, names_prefix = "n_") |>
  pivot_wider(names_from = year, values_from = starts_with("n_"))
```

```{r}
tab
```

::: {.fragment fragment-index=1}

```{r}
library(kableExtra)
options(knitr.kable.NA = '')

ktb <- tab |>
  kbl(format = "latex", booktabs = TRUE,
      col.names = c(" ", 2019:2022, 2019:2022)) |>
  add_header_above(c(" ", "Men" = 4, "Women" = 4)) |>
  pack_rows(index = c("Good" = 2, "Bad" = 4))

ktb |>
  save_kable(here("output/tex/kableextra/tb_accident_bike.tex"))
```

:::

:::

::: {.column width="40%"}
![](img/kableextra.png)

::: {.fragment fragment-index=2}
::: {.small}

- `booktabs = TRUE` for `booktabs` package in LaTeX
- You can specify the column names by `col.names`
- You can pack columns and rows by `add_header_above()` and `pack_rows()`
- `save_kable()` saves in a tex file if the file name ends with ".tex"

:::
:::
:::

::::

## `kableExtra`

**Dataframe (`tibble`) to Table**

- Create a tibble table by `dplyr::group_by` & `dpyr::summarize` and `janitor::tabyl()`
- For regression tables, you can use `modelsummary` (next slide)

**Pack Columns and Rows**

- As far as I know, Python, Julia, and Stata do not allow us to pack them easily

**More Complicated Tables**

- You can refer to Hao Zhu's [document](https://haozhu233.github.io/kableExtra/awesome_table_in_pdf.pdf)
- If a table contains a mathematical expression, use `escape=FALSE`. See a discussion in [stacoverflow](https://stackoverflow.com/questions/59776466/kableextra-math-symbols)


## `modelsummary`

```{r}
#| echo: false

data <- arrow::read_parquet(here("data/cleaned/accident_bike.parquet")) |>
  mutate(is_died = injury8 == "Died within 24 hours",
         is_hospitalized = injury8 %in% c("Hospitalization after 24 hours",
                                          "Hospitalization within 24 hours",
                                          "Died within 24 hours"))
                                          
```

Given the following regression results,

<br>

```{r}
library(fixest) # for faster regression with fixed effect

models <- list(
    "(1)" = feglm(is_hospitalized ~ type_person + positive_alcohol + positive_drug | age_c + gender,
                family = binomial(logit), data = data),
    "(2)" = feglm(is_hospitalized ~ type_person + positive_alcohol + positive_drug | age_c + gender + type_vehicle,
                family = binomial(logit), data = data),
    "(3)" = feglm(is_hospitalized ~ type_person + positive_alcohol + positive_drug | age_c + gender + type_vehicle + weather,
                family = binomial(logit), data = data),
    "(4)" = feglm(is_died ~ type_person + positive_alcohol + positive_drug | age_c + gender,
                family = binomial(logit), data = data),
    "(5)" = feglm(is_died ~ type_person + positive_alcohol + positive_drug | age_c + gender + type_vehicle,
                family = binomial(logit), data = data),
    "(6)" = feglm(is_died ~ type_person + positive_alcohol + positive_drug | age_c + gender + type_vehicle + weather,
                family = binomial(logit), data = data)
)

```


## `modelsummary`: Init {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="60%"}
```{.r}
modelsummary(models)
```

:::

::: {.column width="40%"}
::: {style="font-size: 0.3em"}
```{r}
#| echo: false

gm <- tibble(
    raw = c("nobs", "FE: age_c", "FE: gender", "FE: type_vehicle", "FE: weather"),
    clean = c("Observations", "FE: Age Group", "FE: Gender", "FE: Type of Vehicle", "FE: Weather"),
    fmt = c(0, 0, 0, 0, 0)
)

cm  <-  c(
    "type_personpassenger" = "Passenger",
    "type_personpedestrian" = "Pedestrian",
    "positive_alcoholTRUE" = "Positive Alcohol"
)

library(modelsummary)
modelsummary(models)
```
:::
:::
::::

## `modelsummary`: Modify Coefficients {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="60%"}
```{.r code-line-numbers="1-5,8"}
cm  <-  c(
    "type_personpassenger" = "Passenger",
    "type_personpedestrian" = "Pedestrian",
    "positive_alcoholTRUE" = "Positive Alcohol"
)

modelsummary(models,
  coef_map = cm
)
```

:::

::: {.column width="40%"}
::: {style="font-size: 0.3em"}
```{r}
#| echo: false

modelsummary(models,
  coef_map = cm  
)
```
:::
:::
::::

## `modelsummary`: Modify Statitics {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="60%"}
```{.r code-line-numbers="7-11,15"}
cm  <-  c(
    "type_personpassenger" = "Passenger",
    "type_personpedestrian" = "Pedestrian",
    "positive_alcoholTRUE" = "Positive Alcohol"
)

gm <- tibble(
    raw = c("nobs", "FE: age_c", "FE: gender", "FE: type_vehicle", "FE: weather"),
    clean = c("Observations", "FE: Age Group", "FE: Gender", "FE: Type of Vehicle", "FE: Weather"),
    fmt = c(0, 0, 0, 0, 0)
)

modelsummary(models,
  coef_map = cm,
  gof_map = gm
)
```

:::

::: {.column width="40%"}
::: {style="font-size: 0.3em"}
```{r}
#| echo: false

modelsummary(models,
  coef_map = cm,
  gof_map = gm
)
```
:::
:::
::::

## `modelsummary`: Stars & Headers {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="60%"}
```{.r code-line-numbers="14,17"}
code-line-numbers="7,16"
cm  <-  c(
    "type_personpassenger" = "Passenger",
    "type_personpedestrian" = "Pedestrian",
    "positive_alcoholTRUE" = "Positive Alcohol"
)

gm <- tibble(
    raw = c("nobs", "FE: age_c", "FE: gender", "FE: type_vehicle", "FE: weather"),
    clean = c("Observations", "FE: Age Group", "FE: Gender", "FE: Type of Vehicle", "FE: Weather"),
    fmt = c(0, 0, 0, 0, 0)
)

modelsummary(models,
  stars = c("+" = .1, "*" = .05, "**" = .01),
  coef_map = cm,
  gof_map = gm) |>
  add_header_above(c(" ", "Hospitalization" = 3, "Died within 24 hours" = 3)) 
```

:::

::: {.column width="40%"}
::: {style="font-size: 0.3em"}
```{r}
#| echo: false

modelsummary(models,
  stars = c("+" = .1, "*" = .05, "**" = .01),
  coef_map = cm,
  gof_map = gm) |>
  add_header_above(c(" ", "Hospitalization" = 3, "Died within 24 hours" = 3))
```
:::
:::
::::

## `modelsummary`: Export to $\LaTeX$ {auto-animate="true"}

<br>

:::: {.columns}

::: {.column width="60%"}
```{.r code-line-numbers="14,19,20"}
cm  <-  c(
    "type_personpassenger" = "Passenger",
    "type_personpedestrian" = "Pedestrian",
    "positive_alcoholTRUE" = "Positive Alcohol"
)

gm <- tibble(
    raw = c("nobs", "FE: age_c", "FE: gender", "FE: type_vehicle", "FE: weather"),
    clean = c("Observations", "FE: Age Group", "FE: Gender", "FE: Type of Vehicle", "FE: Weather"),
    fmt = c(0, 0, 0, 0, 0)
)

modelsummary(models,
  output = "latex_tabular",
  stars = c("+" = .1, "*" = .05, "**" = .01),
  coef_map = cm,
  gof_map = gm) |>
  add_header_above(c(" ", "Hospitalization" = 3, "Died within 24 hours" = 3)) |>
  row_spec(7, hline_after = T) |>
  save_kable(here("output/tex/modelsummary/reg_accident_bike.tex"))
```

:::

::: {.column width="40%"}

![](img/modelsummary.png)

:::
::::

<br>

`output = "latex_tabular"` produces a tex file not containing `table` tag

## Takeaway

<br>

#### `kableExtra` & `modelsummary`

- You can quickly export tibble (dataframe) as latex table by `kableExtra`
- `modelsummary` produces kableExtra object from regression results
- You can see the latex table in `output/tex/` and the compiled results in `code/thesis/`

<br>

#### Further Readings

- Official Document [modelsummary](https://vincentarelbundock.github.io/modelsummary/articles/modelsummary.html) and @zhu_create_2021
- [gt](https://gt.rstudio.com/articles/intro-creating-gt-tables.html) is a great alternative to `kableExtra`. I use `gt` tables in my slides


# Quarto {background-color="#1C5253" visibility="uncounted"}

## What Is Quarto (.qmd)?

<br>

![](img/quarto.drawio.svg)

<br>

. . .

I use Quarto for

- **Reporting**: Easy to show the progress to supervisor/coauthors
- **Presentation**: Reveal.js produces reasonably beautiful slides


## Quarto (Markdown) Is Easy-version of $\LaTeX$!

:::: {.columns}

::: {.column width="50%"}

**Quarto** (Markdown)

Headings

``` markdown
# Heading 1
## Heading 2
### Heading 3
```

:::

::: {.column width="50%"}

**$\LaTeX$**

<br>

```{.latex}
\section{Heading 1}
\subsection{Heading 2}
\subsubsection{Heading 3}
```

:::

::::

:::: {.columns}

::: {.column width="50%"}

Bullet points

``` markdown
- item 1
- item 2
- item 3
```

:::

::: {.column width="50%"}

<br>

```{.latex}
\begin{itemize}
  \item item 1
  \item item 2
  \item item 3
\end{itemize}
```

:::

::::




:::: {.columns}

::: {.column width="50%"}

Enumerate

``` markdown
1. item 1
1. item 2
1. item 3
```

:::

::: {.column width="50%"}

<br>

```{.latex}
\begin{enumerate}
  \item item 1
  \item item 2
  \item item 3
\end{enumerate}
```

:::
::::

## Quarto (Markdown) Is Easy-version of $\LaTeX$!

:::: {.columns}

::: {.column width="50%"}

**Quarto** (Markdown)

Text Formatting

``` markdown
**bold letters**
_italic letters_
$f_n(x)$
```

:::

::: {.column width="50%"}

**$\LaTeX$**

<br>

```{.latex}
\textbf{bold letters}
\textit{italic letters}
$f_n(x)$
```

:::

::::

:::: {.columns}

::: {.column width="50%"}

Display Math

``` markdown
$$
\begin{aligned}
u(x) &= \frac{c^{1 - \gamma}}{1 - \gamma} \\
u'(x) &= c^{1- \gamma}
\end{aligned}
$$
```

:::

::: {.column width="50%"}

<br>

```{.latex}
\begin{align*}
u(x) &= \frac{c^{1 - \gamma}}{1 - \gamma} \\
u'(x) &= c^{1- \gamma}
\end{align*}
```

:::

::::




:::: {.columns}

::: {.column width="50%"}

Cross References

``` markdown
@bib_tex_key
@fig-label_fig
@tbl-label_tbl
```

:::

::: {.column width="50%"}

<br>

```{.latex}
\cite(bib_tex_key)
\ref{fig:label_fig}
\ref{tbl:label_tbl}
```

:::
::::

## Quarto Presentation

:::: {.columns}

::: {.column width="50%"}

**Quarto** (Reveal.js)

``` markdown
## First Slide

Blah, Blah, Blah

## Second Slide

Yeah, Yeah, Yeah

```

:::

::: {.column width="50%"}

**$\LaTeX$** (Beamer)

```{.latex}
\begin{frame}{First Slide}

Blah, Blah, Blah

\end{frame}

\begin{frame}{Secon Slide}

Yeah, Yeah, Yeah

\end{frame}

```

:::
::::

## Quarto Presentation: Fragments

:::: {.columns}

::: {.column width="50%"}
**Quarto** (Reveal.js)

Pause

``` markdown
First fragment

. . .

Second fragment

```

:::

::: {.column width="50%"}
**$\LaTeX$** (Beamer)

<br>

```{.latex}
First fragment

\pause

Second fragment

```

:::
::::

:::: {.columns}

::: {.column width="50%"}

Incremental List

``` markdown
::: {.incremental}

- 1st element
- 2nd element
- 3rd element

:::

```

:::

::: {.column width="50%"}

<br>

```{.latex}
\begin{itemize}[<+->]
    \item 1st element
    \item 2nd element
    \item 3rd element
\end{itemize}
```

:::
::::

<br>
For more complicated examples, see Tom Mock's [this part](https://rstudio-conf-2022.github.io/get-started-quarto/materials/05-presentations.html#/lists) of the slides

## Why Do I Use Quarto?

<br>

**Reports**

- Analysis, Results, and Interpretation are done in one file
- Easy to communicate with supervisor/coauthors

**Presentations**

- I prefer its design to Beamer. Highly customizable
- Same effort as Beamer slides. The syntax is almost the same
- For more reasons and techniques, read my [blog](https://kazuyanagimoto.com/blog/2022/12/27/quarto_tips/)


## References {visibility="uncounted"}
::: {#refs}
:::